version: '3.9'

services:
  # services
  http-service:
    build:
      dockerfile: ./src/ObservabilityExample.HttpService/Dockerfile
    container_name: http-service
    hostname: http-service.local
    ports:
      - "8081:8080" # HTTP PORT
    depends_on:
      - grpc-service
    networks:
      - internal-network
    environment:
      GrpcServiceOptions__Address: "http://grpc-service.local:8084"

  grpc-service:
    build:
      dockerfile: ./src/ObservabilityExample.GrpcService/Dockerfile
    container_name: grpc-service
    hostname: grpc-service.local
    ports:
      - "8091:8080" # HTTP PORT
      - "8092:8084" # GRPC PORT
    networks:
      - internal-network
    environment:
      ASPNETCORE_HTTP_PORT: 8080
      ASPNETCORE_GRPC_PORT: 8084


  #   monitoring
  #     prometheus
  prometheus:
    image: prom/prometheus:v2.49.1
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./configs/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - internal-network

  #     grafana
  grafana:
    image: grafana/grafana:10.2.3
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=P@ssw0rd
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - internal-network

  #     jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.53
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686" # serve frontend
      - "4317:4317"   # accept OpenTelemetry Protocol (OTLP) over gRPC
    environment:
      COLLECTOR_OTLP_ENABLED: true
      JAEGER_DISABLED: true
    networks:
      - internal-network

volumes:
  postgres_data: { }
  prometheus_data: { }
  grafana_data: { }

networks:
  internal-network: { }
